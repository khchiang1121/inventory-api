# Development environment values for virtflow-api

# Application name and namespace
nameOverride: "virtflow-api-dev"
fullnameOverride: "virtflow-api-dev"

# Image configuration for development
image:
  registry: registry.gitlab.com
  repository: your-org/virtflow-api
  tag: "dev-latest"
  pullPolicy: Always

# Service account
serviceAccount:
  create: true
  name: "virtflow-api-dev-sa"

# Service configuration
service:
  type: ClusterIP
  port: 80
  targetPort: 8201

# Ingress configuration for development
ingress:
  enabled: true
  className: "nginx"
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
  hosts:
    - host: virtflow-api-dev.your-domain.com
      paths:
        - path: /
          pathType: Prefix
  tls: []

# Deployment configuration for development
deployment:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%

# Resources for development (lower than production)
resources:
  limits:
    cpu: 300m
    memory: 384Mi
  requests:
    cpu: 150m
    memory: 192Mi

# Horizontal Pod Autoscaler for development
hpa:
  enabled: true
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

# Pod Disruption Budget for development
pdb:
  enabled: true
  minAvailable: 1

# Health check configuration
healthCheck:
  livenessProbe:
    enabled: true
    path: /health/
    port: 8201
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
  readinessProbe:
    enabled: true
    path: /health/
    port: 8201
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 3
    failureThreshold: 3

# Environment configuration for development
env:
  # Django settings
  DJANGO_SETTINGS_MODULE: "virtflow.settings"
  DEBUG: "True"
  ALLOWED_HOSTS: "*"
  
  # Database settings
  DB_HOST: "postgres-dev-service"
  DB_PORT: "5432"
  DB_NAME: "virtflow_dev"
  
  # Redis settings
  REDIS_HOST: "redis-dev-service"
  REDIS_PORT: "6379"
  
  # Application settings
  APP_PORT: "8201"
  WORKERS: "2"

# Secrets configuration for development
secrets:
  # Django secret key (will be auto-generated if not provided)
  SECRET_KEY: ""
  # Database credentials
  DB_USER: "virtflow_dev"
  DB_PASSWORD: "dev-password"
  # Admin password
  DJANGO_ADMIN_PASSWORD: "dev-admin-password"

# ConfigMap additional data for development
configMap:
  additionalData:
    ENVIRONMENT: "development"
    LOG_LEVEL: "DEBUG"

# Node selector (optional)
nodeSelector: {}

# Tolerations (optional)
tolerations: []

# Affinity (optional)
affinity: {}

# Additional volumes (optional)
volumes: []

# Additional volume mounts (optional)
volumeMounts: []

# Init containers (optional)
initContainers: []

# Sidecar containers (optional)
sidecars: []

# Network policy (disabled for development)
networkPolicy:
  enabled: false

# Service monitor (disabled for development)
serviceMonitor:
  enabled: false

# Pod disruption budget
podDisruptionBudget:
  enabled: true
  minAvailable: 1
  maxUnavailable: 1

# Pod security policy (disabled for development)
podSecurityPolicy:
  enabled: false 